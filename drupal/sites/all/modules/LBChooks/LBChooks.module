<?php
/**
 * @file
 * A block containing a link to the parent of a well formed path
 */
 
 /**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function LBChooks_help($path, $arg) {
  switch ($path) {
    case "admin/help#LBChooks":
      return '<p>'.  t("A module hooking custom functionality for the London Buddhist Centre") .'</p>';
      break;
  }
}
 
 /**
 * Implements hook_block_info().
 */
function LBChooks_block_info() {
  $blocks['LBChooks'] = array(
    'info' => t('LBC hooks'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}

function LBChooks_civicrm_post($op, $objectName, $objectId, &$objectRef) {
  error_log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", 0);
  error_log('> '.$op.' '.$objectName, 0);
  error_log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", 0);
  if ($op != 'edit' || $objectName != 'Event')
    return;
  require_once 'api/api.php';
  $result = civicrm_api('Event','Get',array('id' => $objectId, 'version' =>3)); 
  if ($result['is_error']!=0)
  	return;
  $event=$result['values'][$objectId];
  if ($event['template_title']=='Create Solitary Retreats')
  	RecursivelyChopEventIntoWeeks($event);
}

function RecursivelyChopEventIntoWeeks(&$event) {
  error_log("--------------------------------", 0);
  $event_id=$event['id'];
  $end_date_text=$event['end_date'];
  $end_date=date_create($end_date_text);
  $start_date_text=$event['start_date'];
  $start_date=date_create($start_date_text);
  $duration=$start_date->diff($end_date);
  $days=$duration->d;
  error_log('There are '.$days.' days in retreat #'.$event_id.' which runs from '.$start_date_text.' until '.$end_date_text, 0);
  if ($days>7)
  	error_log('and hence it should be segmented', 0);
  else {
  	error_log('which is a week or less', 0);
  	return;
  }
  $start_date->add(date_interval_create_from_date_string('1 week'));
  $one_week_after_start_date_text=$start_date->format('Y-m-d H:i:s');
  error_log($one_week_after_start_date_text.' is one week after the start date', 0);
  error_log("--------------------------------", 0);
  //error_log('Event '.print_r($event,true), 0);
  //error_log("--------------------------------", 0);  
}
?>